{"version":3,"sources":["/Users/ben/prj/okcai/App.tsx","/Users/ben/prj/okcai/web-build/register-service-worker.js","/Users/ben/prj/okcai/assets/fonts/SpaceMono-Regular.ttf","/Users/ben/prj/okcai/assets/fonts/Bitter/Bitter-Regular.ttf","/Users/ben/prj/okcai/assets/fonts/Pacifico/Pacifico-Regular.ttf","/Users/ben/prj/okcai/assets/logo/heycovid-logos_logo-wink-inverted.svg"],"names":["App","props","React","useState","Font","Ionicons","font","require","style","styles","container","contentContainerStyle","contentContainer","welcomeContainer","source","welcomeImage","splashContainer","SplashContainer","splash","splashHeader","SplashHeaderText","SplashHeaderTitleText","SplashContentText","splashContent","fontSize","fontFamily","color","fontWeight","textShadowOffset","width","height","textShadowColor","StyleSheet","create","flex","backgroundColor","textAlign","maxWidth","marginLeft","marginRight","developmentModeText","marginBottom","lineHeight","paddingTop","alignItems","marginTop","resizeMode","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","tabBarInfoContainer","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.0207153a.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, Platform, Text, View, Image, } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { SplashScreen } from 'expo';\nimport { useLinking } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  // const containerRef = React.useRef();\n  // const { getInitialState } = useLinking(containerRef);\n\n  // // Load any resources or data that we need prior to rendering the app\n  // React.useEffect(() => {\n    \n  //   async function loadResourcesAndDataAsync() {\n  //     try {\n  //       SplashScreen.preventAutoHide();\n\n  //       // Load our initial navigation state\n  //       setInitialNavigationState(await getInitialState());\n\n  //       // // Load fonts\n  //       // await Font.loadAsync({\n  //       //   ...Ionicons.font,\n  //       //   'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n  //       //   'bitter': require('./assets/fonts/Bitter/Bitter-Regular.ttf'),\n  //       //   'pacifico':require('./assets/fonts/Pacifico/Pacifico-Regular.ttf'),\n  //       // });\n  //     } catch (e) {\n  //       // We might want to provide this error information to an error reporting service\n  //       console.warn(e);\n  //     } finally {\n  //       setLoadingComplete(true);\n  //       SplashScreen.hide();\n  //     }\n  //   }\n\n  //   loadResourcesAndDataAsync();\n  // }, []);\n\n  // if (!isLoadingComplete && !props.skipLoadingScreen) {\n  //   return null;\n  // } else {\n\n    Font.loadAsync({\n              ...Ionicons.font,\n              'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n              'bitter': require('./assets/fonts/Bitter/Bitter-Regular.ttf'),\n              'pacifico':require('./assets/fonts/Pacifico/Pacifico-Regular.ttf'),\n            });\n\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n          <View style={styles.welcomeContainer}>\n            <Image\n              source={require('./assets/logo/heycovid-logos_logo-wink-inverted.svg') }\n              style={styles.welcomeImage}\n            />\n          </View>\n  \n          <View style={styles.splashContainer}>\n            <SplashContainer />\n          </View>\n        </ScrollView>\n      </View>\n\n  );\n    // }\n}\n\nfunction SplashContainer() {\n\n  return(\n    <View style={styles.splash}>\n      <View style={styles.splashHeader}>\n       <SplashHeaderText><SplashHeaderTitleText>OKC</SplashHeaderTitleText></SplashHeaderText>\n       <SplashHeaderText>OK COVID</SplashHeaderText>\n      </View>\n\n      <SplashContentText style={styles.splashContent}>\n        The new dating website that allows you to match with other elite singles infected with novel corona virus!\n    </SplashContentText>\n    </View>\n    );\n  \n}\n\n\nexport function MonoText(props) {\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\n}\n\nexport function SplashHeaderTitleText(props){\n  return <Text {...props} style={\n    [props.style, { fontSize:120}]}/>\n}\n\n\n\nexport function SplashAllText(props){\n  return <Text {...props} style={\n    [props.style, { \n      color:\"blue\",\n      textAlign:\"center\",\n        }\n  ]} />;\n}\nexport function SplashHeaderText(props){\n  return <Text {...props} style={\n    [props.style, { \n      fontFamily: 'pacifico' , \n      color:\"blue\",\n      fontSize:70,\n      fontWeight:\"bold\",\n      textShadowOffset:{width:3,height:3},\n      textShadowColor:\"white\",\n        }\n  ]} />;\n}\n\nexport function SplashContentText(props){\n  return <Text {...props} style={\n    [props.style,{\n      fontFamily:\"bitter\",\n      fontSize:40,\n    }]\n  }/>\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'fuchsia',\n  },\n\n  splash:{\n\n    textAlign:\"center\",\n    maxWidth:400,\n    marginLeft:'auto',\n    marginRight:'auto',\n\n  },\n  splashHeader: {\n    color:\"blue\",\n  },  \n  splashContent:{\n    color:\"yellow\",\n  }, \n  splashContainer:{\n    backgroundColor:\"fuchsia\",\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Bitter-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Pacifico-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/heycovid-logos_logo-wink-inverted.c80eb575.svg\";"],"sourceRoot":""}